@using QuizExperiment.Models
@using Blazorise.Charts

<div class="d-flex flex-column min-vh-100 justify-content-center align-items-center">
    <h1 class="h1 text-center">The correct answer is <strong>@(Options[CorrectAnswerIndex])</strong></h1>
     <Chart @ref="barChart" Type="ChartType.Bar" TItem="int" />
    <button class="btn btn-primary" @onclick="@(e=> OnNextQuestion.InvokeAsync())">Next</button>
</div>

@code {
    [Parameter]
    public Dictionary<string, UserAnswer> UserAnswers { get; set; }

    [Parameter]
    public EventCallback<string> OnNextQuestion { get; set; }

    [Parameter]
    public int CorrectAnswerIndex { get; set; }

    [Parameter]
    public string[] Options { get; set; }


    Chart<int> barChart;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await HandleRedraw();
        }
    }

    async Task HandleRedraw()
    {
        
        await barChart.Clear();

        await barChart.SetOptions(new ChartOptions()
            {

                Scales = new Scales
                {
                    YAxes = new List<Axis> {
                    new Axis {
                        Ticks = new AxisTicks
                        {
                            BeginAtZero = true
                        }
                    }
                }
                }
            });

        await barChart.AddLabelsDatasetsAndUpdate(Options, GetBarChartDataset());
        

    }

    BarChartDataset<int> GetBarChartDataset()
    {
        var Labels = new List<string> { "Red", "Blue", "Yellow", "Green" };

        var countAnswers = UserAnswers.GroupBy(r => r.Value.AnswerIndex).Select(r => new
        {
            AnswerIndex = r.Key,
            Count = r.Count()
        }).ToDictionary(k => k.AnswerIndex, v => v.Count);

        //This ensures the order is preserved
        var data = Options.Select((r,i) => countAnswers.ContainsKey(i) ? countAnswers[i] : 0).ToList();

        return new BarChartDataset<int>
            {
                Data = data,
                BackgroundColor = Labels,
                BorderColor = Labels,

            };
    }
}
